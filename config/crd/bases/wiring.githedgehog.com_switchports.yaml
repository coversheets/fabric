---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: switchports.wiring.githedgehog.com
spec:
  group: wiring.githedgehog.com
  names:
    kind: SwitchPort
    listKind: SwitchPortList
    plural: switchports
    singular: switchport
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "SwitchPort is the Schema for the ports API \n All ports should
          always have 2 labels defined: wiring.githedgehog.com/rack and wiring.githedgehog.com/switch.
          It represents names of the rack and switch it belongs to."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SwitchPortSpec is the model used to represent a switch port
            properties:
              adminState:
                type: string
              cableType:
                enum:
                - copper
                - optical
                type: string
              connectorType:
                type: string
              interfaces:
                items:
                  description: Interfaces are pseudo ports ( vlan interfaces,subinterfaces).
                    They always have a parent Port.
                  properties:
                    bfdEnabled:
                      type: boolean
                    bgpEnabled:
                      type: boolean
                    bundle:
                      type: string
                    ipAddress:
                      type: string
                    mode:
                      enum:
                      - untagged-l2
                      - tagged-l2
                      - routed
                      type: string
                    name:
                      type: string
                    vlans:
                      items:
                        type: integer
                      type: array
                    vrf:
                      type: string
                  type: object
                type: array
              isConnected:
                type: boolean
              neighbor:
                description: Neighbor represents the neighbor of a particular port
                  which could be either be a Switch or Server
                properties:
                  server:
                    properties:
                      name:
                        type: string
                      port:
                        type: string
                    type: object
                  switch:
                    properties:
                      name:
                        type: string
                      port:
                        type: string
                    type: object
                type: object
              nosPortName:
                type: string
              nosPortNum:
                type: integer
              onie:
                description: ONIEConfig holds all the port configuration at installation/ONIE
                  time. They are being consumed by the seeder (DAS BOOT).
                properties:
                  bootstrapIP:
                    type: string
                  portName:
                    type: string
                  portNum:
                    type: integer
                  routes:
                    items:
                      description: ONIERoutes holds additional routing information
                        to be applied in ONIE at installation/ONIE time. They are
                        being consumed by the seeder (DAS BOOT).
                      properties:
                        destinations:
                          items:
                            type: string
                          type: array
                        gateway:
                          type: string
                      type: object
                    type: array
                  vlan:
                    type: integer
                type: object
              portSpeed:
                type: string
              role:
                enum:
                - leaf-server-l3
                - leaf-server-l2-untagged
                - leaf-server-l2-tagged
                - leaf-service
                - leaf-fabric
                - leaf-border
                - spine-fabric
                - spine-border
                type: string
              vrf:
                type: string
            type: object
          status:
            description: SwitchPortStatus defines the observed state of Port
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
